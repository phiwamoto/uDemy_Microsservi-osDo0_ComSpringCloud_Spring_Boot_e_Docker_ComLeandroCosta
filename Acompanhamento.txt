

Seção 1: Apresentação

   - Apresentação (27/11/2023)
   - Repositórios do Curso no Github (27/11/2023)

   
Seção 2: [SEÇÃO DE NIVELAMENTO] Fundamentos Teóricos do REST

   - Apresentação da Seção Fundamentos Teóricos do REST (12/12/2023)
      - Diferença entre SOAP e REST
	  - Principais conceitos REST, tipos de parametro, verbos HTTP, Status Codes
	  - HATEOAS
	  - Niveis de maturidade de Richardson
   - O que são Webservices (12/12/2023)
   - SOAP x REST (12/12/2023)
   - O que é REST (09/01/2024)
	  - Representation State Transfer (REST): é um estilo de arquitetura de software para sistemas distribuídos
	    de hipermídia, como a World Wide Web
		
		1) Cliente-Servidor: Clientes e servidores separados
		2) Stateless server: O servidor não deve guardar o estado do cliente. Cada request de um cliente contém todas as informações
		                     necessárias para atendê-la
		3) Cacheable: O cliente deve ser informado sobre as propriedades de cache de um recurso para que possa decidir quanto deve
                      ou não utilizar cache      		
		4) Interface uniforme: Existe uma interface uniforme entre cliente e servidor
                               > Identificação de recursos (URI)
                               > Manupulação de recursos a partir de suas representações
                               > Mensagem auto descritivas.
                               > Hypermedia as the engine of applicattion state - HATEOAS
		5) Sistemas em camadas: Deve suportar conceitos como balanceamento de carga, proxies e firewalls
		6) Código sob Demanda (opcional): O cliente pode solicitar o código do servidor e executá-lo
		
   - Entendendo Request e Response (09/01/2024)
   - Os Tipos de Parâmetros Usados no REST (09/01/2024)
   - HTTP Status Codes (09/01/2024)
      - Do 1xx Informacionais
      - Do 2xx Sucesso
      - Do 3xx Redirecionamento
      - Do 4xx Erro de Client
      - Do 5xx Erro de Server
   - Os Verbos HTTP e o REST (09/01/2024)
      - Post: inserir novo recurso
      - Get: recuperar um recurso
      - Put or Patch: modificar um recurso
      - Delete: remove um recurso
   - Os Verbos HTTP Menos Conhecidos (09/01/2024)
      - Patch: utilizado para realizar update parciais, campo especifico
      - Head: similar ao get, somente retorna a resposaline
      - Trace: utilizado para debug
      - Options: operações suportada pela API
      - Connect: utilizado para conexão rede cliente
   - Níveis de Maturidade de Richardson (09/01/2024)
      - Sua API pode ser REST mas não necessariamente RESTFULL
      - Sua API for RESTFULL automaticamente ela é REST
		 
      - RESTFULL: 4 níveis de maturidade (RICHARDSON MATURITY MODEL)
         Level 0: The Swamp of POX (Plan Old XML)
         Level 1: Resources
         Level 2: HTTP Verbs
         Level 3: Hypermedia Controls
         GLORY OF REST
   - HATEOAS (09/01/2024)
      - é uma restrição que faz parte da arquitetura de aplicações REST,
        cujo objetivo é ajudar os clientes a consumirem o serviço sem a necessidade de conhecimento prévio profundo da API.
   - Conclusão da Seção - Fundamentos Teóricos do REST (09/01/2024)


Seção 3: Configuração do Ambiente Windows

   - Apresentação da Seção - Configuração do Ambiente Windows (09/01/2024)
   - Instalando o Java (09/01/2024)
   - Instalando o Maven (09/01/2024)
   - Instalando Spring Tools 4 (Spring Tool Suite) (09/01/2024)
   - Instalando o GIT (10/01/2024)
   - Instalando o MySQL (10/01/2024)
   - Instalando o MySQL Workbench (10/01/2024)
   - Instalando o HeidiSQL (11/01/2024)
   - Instalando o Postman (11/01/2024)
   - Instalando o Docker (11/01/2024)
      - docker info
   - Criando um Projeto no Spring Initializr e Testando o Ambiente de DEV (11/01/2024)
   - Conclusão da Seção - Configuração do Ambiente Windows (11/01/2024)


Seção 4: Configuração do Ambiente no Linux

   - Apresentação da Seção - Configuração do Ambiente Linux (11/01/2024)
   - Instalando o Virtual Box (11/01/2024 e 12/01/2024)
   - Criando A Máquina Virtual e Instalando o Ubuntu (12/01/2024 e 17/01/2024)
   - Instalando o Java (17/01/2024)
   - Instalando o Maven (17/01/2024)
   - Instalando Spring Tools 4 (Spring Tool Suite) (25/01/2024)
   - Instalando o MySQL (25/01/2024)
   - Instalando o MySQL Workbench(25/01/2024)
   - Criando uma Base de Dados (25/01/2024)
   - Instalando o Postman (25/01/2024)
   - Instalando o Docker (25/01/2024)
   - Instalando o Docker Compose (25/01/2024)
   - Instalando o GIT (25/01/2024)
   - Instalando o Maven (25/01/2024)
   - Criando um Projeto no Spring Initializr e Testando o Ambiente de DEV (25/01/2024)
   - Conclusão da Seção - Configuração do Ambiente Linux (25/01/2024)


Seção 5: Seção de Nivelamento - REST na Prática com Spring (Framework) Boot 3.2 e Java 21

   - Apresentação da Seção - REST na Prática c. Spring (Framework) Boot 3 e Java (28/01/2024)
      @RequestController
	  @RequestMapping
	  @PathVariable
	 
	  @ControllerAdvice
	  @ReponseStatus
	  @ExceptionHandler
   - O que é o Spring Boot (28/01/2024)
      - Ferramenta de runtime padronizada para Spring
	  - Convenção sobre a configuração
	  - Conveções podem ser sobrescritas
	  - Elimina a configuração em XML
	  - Simplifica o gerenciamento de dependências
	  - O JAR da aplicação terá um Tomcat embarcado
	  - Endpoints default para helth metrics e actuators
   - A Documentação do Spring Boot (28/01/2024)
      - https://spring.io/projects/spring-boot
	  - https://calendar.spring.io/
	  - https://start.spring.io/
   - Criando o Repositório do Projeto no GitHub (28/01/2024 e 29/01/2024)
   - Criando o Nosso Projeto na Spring Tools 4 (29/01/2024)
      - rest-with-spring-boot-and-java-erudio
         - Spring web
		 - Spring Boot DevTools
   - Entendendo o Maven e o pom.xml (29/01/2024)
   - Criando o Primeiro Endpoint REST (29/01/2024)
      - http://localhost:8080/greeting
	     - {"id":2,"content":"Hello, World!"}
      - http://localhost:8080/greeting?name=Erudio
	     - {"id":3,"content":"Hello, Erudio!"}
	  - http://localhost:8080/greeting?name=Pedro+Henrique+Iwamoto
	     - {"id":4,"content":"Hello, Pedro Henrique Iwamoto!"}
   - Diferenças entre o Spring Boot 3 Milestone e Spring Boot 3.0.1 (29/01/2024)
   - Entendendo as Annotations @RestController, @RequestMapping e @PathVariable (29/01/2024)
   - Definindo a Lógica da Nossa Aplicação (29/01/2024)
   - Definindo os Métodos de Validação e Executando a Aplicação (29/01/2024)
      - http://localhost:8080/sum/1/2 >>> 3.0
      - http://localhost:8080/sum/5.1/25,3 >>> 30.4
   - Tratando de Exceções @ControllerAdvice, @ResponseStatus e @ExceptionHandler (29/01/2024)
      - http://localhost:8080/sum/5.1/A >>> {"timestamp":"2024-01-30T00:42:02.080+00:00","message":"Please set a numeric value!","details":"uri=/sum/5.1/A"}
   - [DESAFIO] Implemente as Demais Operações Matemáticas (29/01/2024)
      - http://localhost:8080/sum/20/30 >>> 50.0
      - http://localhost:8080/subtraction/20/30 >>> -10.0
      - http://localhost:8080/multiplication/20/30 >>> 600.0
      - http://localhost:8080/division/20/30 >>> 0.6666666666666666
      - http://localhost:8080/average/20/30 >>> 25.0
      - http://localhost:8080/squareRoot/16 >>> 4.0
   - [SOLUÇÃO] Implementando as Demais Operações Matemáticas (29/01/2024)
   - [DESAFIO] Refatore o Código da Aplicação Separando os Conceitos (29/01/2024)
   - [SOLUÇÃO] Refatorando o Código da Aplicação Separando os Conceitos (29/01/2024)
   - Injeção de Dependências com @Service e @Autowired (29/01/2024)
      - http://localhost:8080/person/1 >>> {"id":1,"firstName":"Leandro","lastName":"Costa","address":"Uberlândia - Minas Gerais - Brasil","gender":"Male"}
   - Retornando Listas de Objetos em JSON (30/01/2024)
   - Os Verbos HTTP POST, PUT e DELETE (30/01/2024)
   - Criando a Base de Dados e Definindo as Propriedades de Conexão (30/01/2024 e 31/01/2024)
      - Criado o banco de dados com o nome: rest_with_spring_boot_erudio
   - Implementando a Entidade Person e o Repositório (31/01/2024)
   - Substituindo os Mocks do Service pelo Acesso ao Repositório (31/01/2024)
   - Executando a Aplicação e Testando os Endpoints (04/02/2024)
      - http://localhost:8080/person (GET)
	  - http://localhost:8080/person/1 (GET)
      - http://localhost:8080/person (POST)
		{
			"firstName": "Ayrton",
			"lastName": "Senna",
			"address": "São Paulo",
			"gender": "Male"
		}   
		
		{
			"firstName": "Leonardo",
			"lastName": "da Vinci",
			"address": "Anchiano - Italy",
			"gender": "Male"
		}
      - http://localhost:8080/person (PUT)
			{
				"id": 2,
				"firstName": "Leonardo",
				"lastName": "da Vinci",
				"address": "Anchiano - Italy",
				"gender": "Male"
			}	    
      - http://localhost:8080/person/3 (DELETE)
   - Refactoring do Controller de Pessoas (04/02/2024)
   - [UPDATES] Diferenças entre o Spring Boot 3 Milestone e Spring Boot 3.0.1 (04/02/2024)
   - [UPDATES] Removendo Warnings após o Upgrade p. Spring Boot 3.2.0 e Java 21 (04/02/2024)
   - [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no StackOverFlow (04/02/2024)
   - [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no Google (05/02/2024)
   - Como um DEV Proativo Soluciona suas Dúvidas no ChatGPT (05/02/2024)

Seção 6: Rápida Introdução aos Microsserviços
   - Apresentação da Seção - Rápida Introdução aos Microsserviços (05/02/2024)
      - O que são micro serviços;
	  - Monolitico x Micro serviços
   - O que são Microsserviços? (05/02/2024)
   - O que os Microsserviços não são e por que eles são uma "Febre"? (06/02/2024)
   - Entendendo como as Aplicações Monolíticas Funcionam (06/02/2024)
   - Os Desafios das Aplicações Monolíticas (06/02/2024)
   - Prós e Contras das Aplicações Monolíticas (06/02/2024)
   - Entendendo como Funciona uma Arquitetura de Microsserviços (06/02/2024)
   - As Vantagens e os Desafios Relacionados aos Microsserviços (06/02/2024)
   - Como Quebrar uma Aplicação Monolítica em Microsserviços (06/02/2024)
   - Diferenças entre Microsserviços e SOA (06/02/2024)
   - Conclusão da Seção - Rápida Introdução aos Microsserviços


Seção 7: Spring Cloud Configuration (Archaius) e Spring Boot Actuator
   - Seção 7: Spring Cloud Configuration (Archaius) e Spring Boot Actuator (06/02/2024)
   - Criando o Microsserviço Greeting Service (11/02/2024)
      - Create new Spring Starter Project
	     - Spring Web
		 - Spring Boot Actuator
		 - Client Config
      - http://localhost:8080/greeting >>> {"id":1,"content":"Hello, World!"}
   - Recuperando os Valores da Configuração (11/02/2024)
      - import org.springframework.boot.context.properties.ConfigurationProperties;
      - import org.springframework.stereotype.Component;
      - @Component
      - @ConfigurationProperties("greeting-service")
	  - Acima - Spring Boot Actuator
   - Conhecendo o Spring Boot Actuator (11/02/2024)
      - http://localhost:8080/greeting >>> {"id":1,"content":"Olá, Mundo!"}
	  - http://localhost:8080/greeting?name=Semeru%20Erudio >>> {"id":2,"content":"Olá, Semeru Erudio!"}
	  - http://localhost:8080/actuator
	     - {"_links":{"self":{"href":"http://localhost:8080/actuator","templated":false},"health":{"href":"http://localhost:8080/actuator/health","templated":false},"health-path":{"href":"http://localhost:8080/actuator/health/{*path}","templated":true}}}
      - http://localhost:8080/actuator/health >>> {"status":"UP"}

	  - http://localhost:8080/actuator 
         - Depois de mudado a properties
				management:
				  endpoints:
					web:
					  exposure:
						include:
						- '*'    
         - {"_links":{"self":{"href":"http://localhost:8080/actuator","templated":false},"beans":{"href":"http://localhost:8080/actuator/beans","templated":false},"caches-cache":{"href":"http://localhost:8080/actuator/caches/{cache}","templated":true},"caches":{"href":"http://localhost:8080/actuator/caches","templated":false},"health-path":{"href":"http://localhost:8080/actuator/health/{*path}","templated":true},"health":{"href":"http://localhost:8080/actuator/health","templated":false},"info":{"href":"http://localhost:8080/actuator/info","templated":false},"conditions":{"href":"http://localhost:8080/actuator/conditions","templated":false},"configprops":{"href":"http://localhost:8080/actuator/configprops","templated":false},"configprops-prefix":{"href":"http://localhost:8080/actuator/configprops/{prefix}","templated":true},"env":{"href":"http://localhost:8080/actuator/env","templated":false},"env-toMatch":{"href":"http://localhost:8080/actuator/env/{toMatch}","templated":true},"loggers":{"href":"http://localhost:8080/actuator/loggers","templated":false},"loggers-name":{"href":"http://localhost:8080/actuator/loggers/{name}","templated":true},"heapdump":{"href":"http://localhost:8080/actuator/heapdump","templated":false},"threaddump":{"href":"http://localhost:8080/actuator/threaddump","templated":false},"metrics-requiredMetricName":{"href":"http://localhost:8080/actuator/metrics/{requiredMetricName}","templated":true},"metrics":{"href":"http://localhost:8080/actuator/metrics","templated":false},"scheduledtasks":{"href":"http://localhost:8080/actuator/scheduledtasks","templated":false},"mappings":{"href":"http://localhost:8080/actuator/mappings","templated":false}}}	  
	  - http://localhost:8080/actuator/mappings
   - Criando um Projeto Spring Cloud Config Server Local (11/02/2024)
      - Create new Spring Starter Project (erudio-config-server)
		 - Spring Boot Actuator
		 - Config Server
      - http://localhost:8888/application-dev/default
      - http://localhost:8888/application-qa/default
      - http://localhost:8888/application-perf/default
	  - http://localhost:8888/application-prod/default
   - Integrando o Spring Cloud Config Server com o Github (11/02/2024)
      - Tivemos que deixar publico, pois privado mesmo com usuario e password não estava autenticando
      - http://localhost:8888/greeting-service/default
	  - http://localhost:8888/greeting-service/dev
	  - http://localhost:8888/greeting-service/perf
	  - http://localhost:8888/greeting-service/qa
	  - http://localhost:8888/greeting-service/prod
   - Integrando o Spring Cloud Config Server com o Github (11/02/2024)
   - Integrando o Greeting Service com o Spring Cloud Config Server (13/02/2024 e 14/02/2024)
      - netstat -o -n -a | findstr 8080 >>> mostrar serviço porta Windows
   - Atualizando as Configurações sem Interromper o Microsserviço (14/02/2024)
      - @RefreshScope
   - Conclusão da Seção - Spring Cloud Configuration e Spring Boot Actuator (14/02/2024)


Seção 8: Criando e Conectando Microsserviços com Feign

   - Apresentação da Seção - Criando e Conectando Microsserviços com Feign (14/02/2024)
   - Como Serão os Nossos Microsserviços (14/02/2024)
   - Criando o Microsserviço Cambio Service (14/02/2024)
      - Criado o projeto: cambio-service
	     - Porta: 8000
      - http://localhost:8000/actuator
   - Criando o Microsserviço Cambio Service (14/02/2024)
   - Retornando Mocks e Testando o Cambio Service (04/03/2024)
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "PORT 8000"
			}
   - Recuperando a Porta da Instância em Execução (04/03/2024)
      - Duplicar a subida de projeto "cambio-service" e dentro de arguments e VM arguments incluir:
	     >>> -Dserver.port=8001
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "8000"
			}	  

      - http://localhost:8001/cambio-service/5/USD/BRL	  
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "8001"
			}

   - Criando a Base de Dados e Adicionando as Dependências do Spring Data JPA (04/03/2024)
      - CREATE SCHEMA `cambio_service` DEFAULT CHARACTER SET latin1 ;
	  - CREATE SCHEMA `book_service` DEFAULT CHARACTER SET latin1 ;
	  - Adicionado no pom.xml as dependencias
	  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>3.2.2</version>
		</dependency>		
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.33</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>		

   - Adicionando o Flyway ao Microsserviço (11/03/2024)
   - Ajustando as Configurações do JPA no application.yml (11/03/2024)
   - Adicionando as Annotations do JPA e Integrando o Serviço ao Banco de Dados (11/03/2024 e 25/03/2024)
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 5.73,
			"conversionValue": 28.65,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 5.73,
			"conversionValue": 45.84,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/ARS
			{
			"id": 4,
			"from": "USD",
			"to": "ARS",
			"conversionFactor": 92.56,
			"conversionValue": 740.48,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/MXN
			{
			"id": 7,
			"from": "USD",
			"to": "MXN",
			"conversionFactor": 20.15,
			"conversionValue": 161.2,
			"environment": "8000"
			}	  
	  
   - Criando o Microsserviço Book Service (25/03/2024)
      - http://localhost:8100/actuator
			{
			"_links": {
			"self": {
			"href": "http://localhost:8100/actuator",
			"templated": false
			},
			"health-path": {
			"href": "http://localhost:8100/actuator/health/{*path}",
			"templated": true
			},
			"health": {
			"href": "http://localhost:8100/actuator/health",
			"templated": false
			}
			}
			}

   - Retornando Mocks e Testando o Book Service (25/03/2024)
      - http://localhost:8100/book-service/5/BRL
			{
			"id": 1,
			"author": "Nigel Poulton",
			"lauchDate": "2024-03-26T03:30:45.950+00:00",
			"price": 13.7,
			"title": "Docker Deep Dive",
			"currency": "BRL",
			"environment": "8100"
			}
   - Adicionando o Flyway e as Dependências do Spring Data JPA ao Book Service (28/03/2024)
      - Adicionado no pom.xml e scripts


   - Integrando o Book Service ao Banco de Dados com JPA e Spring Data (10/06/2024 e 14/06/2024)
		2024-06-10T14:11:10.016-03:00  INFO 8108 --- [book-service] [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table `book_service`.`flyway_schema_history` ...
		2024-06-10T14:11:10.178-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Current version of schema `book_service`: << Empty Schema >>
		2024-06-10T14:11:10.186-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Migrating schema `book_service` to version "1 - Create Table Books"
		2024-06-10T14:11:10.226-03:00  WARN 8108 --- [book-service] [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : DB: Integer display width is deprecated and will be removed in a future release. (SQL State: HY000 - Error Code: 1681)
		2024-06-10T14:11:10.255-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Migrating schema `book_service` to version "2 - Insert Data In Books"
		2024-06-10T14:11:10.298-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Successfully applied 2 migrations to schema `book_service`, now at version v2 (execution time 00:00.046s)
		2024-06-10T14:11:10.463-03:00  INFO 8108 --- [book-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]   
		
      - http://localhost:8100/book-service/5/MXN
			{
			"id": 5,
			"author": "Steve McConnell",
			"price": 10.14,
			"title": "Code complete",
			"currency": null,
			"environment": "8100",
			"lauchDate": "2017-11-07"
			}


   - Ajustando os Problemas com o Jackson e Executando a Aplicação (14/06/2024)
      - http://localhost:8100/book-service/7/MXN
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07",
			"hibernateLazyInitializer": {}
			}
			
      - http://localhost:8100/book-service/7/ARS
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07",
			"hibernateLazyInitializer": {}
			}
			
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07"
			}			




































