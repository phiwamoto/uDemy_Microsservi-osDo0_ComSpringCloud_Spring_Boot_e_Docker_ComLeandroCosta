

Seção 1: Apresentação

   - Apresentação (27/11/2023)
   - Repositórios do Curso no Github (27/11/2023)

   
Seção 2: [SEÇÃO DE NIVELAMENTO] Fundamentos Teóricos do REST

   - Apresentação da Seção Fundamentos Teóricos do REST (12/12/2023)
      - Diferença entre SOAP e REST
	  - Principais conceitos REST, tipos de parametro, verbos HTTP, Status Codes
	  - HATEOAS
	  - Niveis de maturidade de Richardson
   - O que são Webservices (12/12/2023)
   - SOAP x REST (12/12/2023)
   - O que é REST (09/01/2024)
	  - Representation State Transfer (REST): é um estilo de arquitetura de software para sistemas distribuídos
	    de hipermídia, como a World Wide Web
		
		1) Cliente-Servidor: Clientes e servidores separados
		2) Stateless server: O servidor não deve guardar o estado do cliente. Cada request de um cliente contém todas as informações
		                     necessárias para atendê-la
		3) Cacheable: O cliente deve ser informado sobre as propriedades de cache de um recurso para que possa decidir quanto deve
                      ou não utilizar cache      		
		4) Interface uniforme: Existe uma interface uniforme entre cliente e servidor
                               > Identificação de recursos (URI)
                               > Manupulação de recursos a partir de suas representações
                               > Mensagem auto descritivas.
                               > Hypermedia as the engine of applicattion state - HATEOAS
		5) Sistemas em camadas: Deve suportar conceitos como balanceamento de carga, proxies e firewalls
		6) Código sob Demanda (opcional): O cliente pode solicitar o código do servidor e executá-lo
		
   - Entendendo Request e Response (09/01/2024)
   - Os Tipos de Parâmetros Usados no REST (09/01/2024)
   - HTTP Status Codes (09/01/2024)
      - Do 1xx Informacionais
      - Do 2xx Sucesso
      - Do 3xx Redirecionamento
      - Do 4xx Erro de Client
      - Do 5xx Erro de Server
   - Os Verbos HTTP e o REST (09/01/2024)
      - Post: inserir novo recurso
      - Get: recuperar um recurso
      - Put or Patch: modificar um recurso
      - Delete: remove um recurso
   - Os Verbos HTTP Menos Conhecidos (09/01/2024)
      - Patch: utilizado para realizar update parciais, campo especifico
      - Head: similar ao get, somente retorna a resposaline
      - Trace: utilizado para debug
      - Options: operações suportada pela API
      - Connect: utilizado para conexão rede cliente
   - Níveis de Maturidade de Richardson (09/01/2024)
      - Sua API pode ser REST mas não necessariamente RESTFULL
      - Sua API for RESTFULL automaticamente ela é REST
		 
      - RESTFULL: 4 níveis de maturidade (RICHARDSON MATURITY MODEL)
         Level 0: The Swamp of POX (Plan Old XML)
         Level 1: Resources
         Level 2: HTTP Verbs
         Level 3: Hypermedia Controls
         GLORY OF REST
   - HATEOAS (09/01/2024)
      - é uma restrição que faz parte da arquitetura de aplicações REST,
        cujo objetivo é ajudar os clientes a consumirem o serviço sem a necessidade de conhecimento prévio profundo da API.
   - Conclusão da Seção - Fundamentos Teóricos do REST (09/01/2024)


Seção 3: Configuração do Ambiente Windows

   - Apresentação da Seção - Configuração do Ambiente Windows (09/01/2024)
   - Instalando o Java (09/01/2024)
   - Instalando o Maven (09/01/2024)
   - Instalando Spring Tools 4 (Spring Tool Suite) (09/01/2024)
   - Instalando o GIT (10/01/2024)
   - Instalando o MySQL (10/01/2024)
   - Instalando o MySQL Workbench (10/01/2024)
   - Instalando o HeidiSQL (11/01/2024)
   - Instalando o Postman (11/01/2024)
   - Instalando o Docker (11/01/2024)
      - docker info
   - Criando um Projeto no Spring Initializr e Testando o Ambiente de DEV (11/01/2024)
   - Conclusão da Seção - Configuração do Ambiente Windows (11/01/2024)


Seção 4: Configuração do Ambiente no Linux

   - Apresentação da Seção - Configuração do Ambiente Linux (11/01/2024)
   - Instalando o Virtual Box (11/01/2024 e 12/01/2024)
   - Criando A Máquina Virtual e Instalando o Ubuntu (12/01/2024 e 17/01/2024)
   - Instalando o Java (17/01/2024)
   - Instalando o Maven (17/01/2024)
   - Instalando Spring Tools 4 (Spring Tool Suite) (25/01/2024)
   - Instalando o MySQL (25/01/2024)
   - Instalando o MySQL Workbench(25/01/2024)
   - Criando uma Base de Dados (25/01/2024)
   - Instalando o Postman (25/01/2024)
   - Instalando o Docker (25/01/2024)
   - Instalando o Docker Compose (25/01/2024)
   - Instalando o GIT (25/01/2024)
   - Instalando o Maven (25/01/2024)
   - Criando um Projeto no Spring Initializr e Testando o Ambiente de DEV (25/01/2024)
   - Conclusão da Seção - Configuração do Ambiente Linux (25/01/2024)


Seção 5: Seção de Nivelamento - REST na Prática com Spring (Framework) Boot 3.2 e Java 21

   - Apresentação da Seção - REST na Prática c. Spring (Framework) Boot 3 e Java (28/01/2024)
      @RequestController
	  @RequestMapping
	  @PathVariable
	 
	  @ControllerAdvice
	  @ReponseStatus
	  @ExceptionHandler
   - O que é o Spring Boot (28/01/2024)
      - Ferramenta de runtime padronizada para Spring
	  - Convenção sobre a configuração
	  - Conveções podem ser sobrescritas
	  - Elimina a configuração em XML
	  - Simplifica o gerenciamento de dependências
	  - O JAR da aplicação terá um Tomcat embarcado
	  - Endpoints default para helth metrics e actuators
   - A Documentação do Spring Boot (28/01/2024)
      - https://spring.io/projects/spring-boot
	  - https://calendar.spring.io/
	  - https://start.spring.io/
   - Criando o Repositório do Projeto no GitHub (28/01/2024 e 29/01/2024)
   - Criando o Nosso Projeto na Spring Tools 4 (29/01/2024)
      - rest-with-spring-boot-and-java-erudio
         - Spring web
		 - Spring Boot DevTools
   - Entendendo o Maven e o pom.xml (29/01/2024)
   - Criando o Primeiro Endpoint REST (29/01/2024)
      - http://localhost:8080/greeting
	     - {"id":2,"content":"Hello, World!"}
      - http://localhost:8080/greeting?name=Erudio
	     - {"id":3,"content":"Hello, Erudio!"}
	  - http://localhost:8080/greeting?name=Pedro+Henrique+Iwamoto
	     - {"id":4,"content":"Hello, Pedro Henrique Iwamoto!"}
   - Diferenças entre o Spring Boot 3 Milestone e Spring Boot 3.0.1 (29/01/2024)
   - Entendendo as Annotations @RestController, @RequestMapping e @PathVariable (29/01/2024)
   - Definindo a Lógica da Nossa Aplicação (29/01/2024)
   - Definindo os Métodos de Validação e Executando a Aplicação (29/01/2024)
      - http://localhost:8080/sum/1/2 >>> 3.0
      - http://localhost:8080/sum/5.1/25,3 >>> 30.4
   - Tratando de Exceções @ControllerAdvice, @ResponseStatus e @ExceptionHandler (29/01/2024)
      - http://localhost:8080/sum/5.1/A >>> {"timestamp":"2024-01-30T00:42:02.080+00:00","message":"Please set a numeric value!","details":"uri=/sum/5.1/A"}
   - [DESAFIO] Implemente as Demais Operações Matemáticas (29/01/2024)
      - http://localhost:8080/sum/20/30 >>> 50.0
      - http://localhost:8080/subtraction/20/30 >>> -10.0
      - http://localhost:8080/multiplication/20/30 >>> 600.0
      - http://localhost:8080/division/20/30 >>> 0.6666666666666666
      - http://localhost:8080/average/20/30 >>> 25.0
      - http://localhost:8080/squareRoot/16 >>> 4.0
   - [SOLUÇÃO] Implementando as Demais Operações Matemáticas (29/01/2024)
   - [DESAFIO] Refatore o Código da Aplicação Separando os Conceitos (29/01/2024)
   - [SOLUÇÃO] Refatorando o Código da Aplicação Separando os Conceitos (29/01/2024)
   - Injeção de Dependências com @Service e @Autowired (29/01/2024)
      - http://localhost:8080/person/1 >>> {"id":1,"firstName":"Leandro","lastName":"Costa","address":"Uberlândia - Minas Gerais - Brasil","gender":"Male"}
   - Retornando Listas de Objetos em JSON (30/01/2024)
   - Os Verbos HTTP POST, PUT e DELETE (30/01/2024)
   - Criando a Base de Dados e Definindo as Propriedades de Conexão (30/01/2024 e 31/01/2024)
      - Criado o banco de dados com o nome: rest_with_spring_boot_erudio
   - Implementando a Entidade Person e o Repositório (31/01/2024)
   - Substituindo os Mocks do Service pelo Acesso ao Repositório (31/01/2024)
   - Executando a Aplicação e Testando os Endpoints (04/02/2024)
      - http://localhost:8080/person (GET)
	  - http://localhost:8080/person/1 (GET)
      - http://localhost:8080/person (POST)
		{
			"firstName": "Ayrton",
			"lastName": "Senna",
			"address": "São Paulo",
			"gender": "Male"
		}   
		
		{
			"firstName": "Leonardo",
			"lastName": "da Vinci",
			"address": "Anchiano - Italy",
			"gender": "Male"
		}
      - http://localhost:8080/person (PUT)
			{
				"id": 2,
				"firstName": "Leonardo",
				"lastName": "da Vinci",
				"address": "Anchiano - Italy",
				"gender": "Male"
			}	    
      - http://localhost:8080/person/3 (DELETE)
   - Refactoring do Controller de Pessoas (04/02/2024)
   - [UPDATES] Diferenças entre o Spring Boot 3 Milestone e Spring Boot 3.0.1 (04/02/2024)
   - [UPDATES] Removendo Warnings após o Upgrade p. Spring Boot 3.2.0 e Java 21 (04/02/2024)
   - [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no StackOverFlow (04/02/2024)
   - [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no Google (05/02/2024)
   - Como um DEV Proativo Soluciona suas Dúvidas no ChatGPT (05/02/2024)

Seção 6: Rápida Introdução aos Microsserviços
   - Apresentação da Seção - Rápida Introdução aos Microsserviços (05/02/2024)
      - O que são micro serviços;
	  - Monolitico x Micro serviços
   - O que são Microsserviços? (05/02/2024)
   - O que os Microsserviços não são e por que eles são uma "Febre"? (06/02/2024)
   - Entendendo como as Aplicações Monolíticas Funcionam (06/02/2024)
   - Os Desafios das Aplicações Monolíticas (06/02/2024)
   - Prós e Contras das Aplicações Monolíticas (06/02/2024)
   - Entendendo como Funciona uma Arquitetura de Microsserviços (06/02/2024)
   - As Vantagens e os Desafios Relacionados aos Microsserviços (06/02/2024)
   - Como Quebrar uma Aplicação Monolítica em Microsserviços (06/02/2024)
   - Diferenças entre Microsserviços e SOA (06/02/2024)
   - Conclusão da Seção - Rápida Introdução aos Microsserviços


Seção 7: Spring Cloud Configuration (Archaius) e Spring Boot Actuator
   - Seção 7: Spring Cloud Configuration (Archaius) e Spring Boot Actuator (06/02/2024)
   - Criando o Microsserviço Greeting Service (11/02/2024)
      - Create new Spring Starter Project
	     - Spring Web
		 - Spring Boot Actuator
		 - Client Config
      - http://localhost:8080/greeting >>> {"id":1,"content":"Hello, World!"}
   - Recuperando os Valores da Configuração (11/02/2024)
      - import org.springframework.boot.context.properties.ConfigurationProperties;
      - import org.springframework.stereotype.Component;
      - @Component
      - @ConfigurationProperties("greeting-service")
	  - Acima - Spring Boot Actuator
   - Conhecendo o Spring Boot Actuator (11/02/2024)
      - http://localhost:8080/greeting >>> {"id":1,"content":"Olá, Mundo!"}
	  - http://localhost:8080/greeting?name=Semeru%20Erudio >>> {"id":2,"content":"Olá, Semeru Erudio!"}
	  - http://localhost:8080/actuator
	     - {"_links":{"self":{"href":"http://localhost:8080/actuator","templated":false},"health":{"href":"http://localhost:8080/actuator/health","templated":false},"health-path":{"href":"http://localhost:8080/actuator/health/{*path}","templated":true}}}
      - http://localhost:8080/actuator/health >>> {"status":"UP"}

	  - http://localhost:8080/actuator 
         - Depois de mudado a properties
				management:
				  endpoints:
					web:
					  exposure:
						include:
						- '*'    
         - {"_links":{"self":{"href":"http://localhost:8080/actuator","templated":false},"beans":{"href":"http://localhost:8080/actuator/beans","templated":false},"caches-cache":{"href":"http://localhost:8080/actuator/caches/{cache}","templated":true},"caches":{"href":"http://localhost:8080/actuator/caches","templated":false},"health-path":{"href":"http://localhost:8080/actuator/health/{*path}","templated":true},"health":{"href":"http://localhost:8080/actuator/health","templated":false},"info":{"href":"http://localhost:8080/actuator/info","templated":false},"conditions":{"href":"http://localhost:8080/actuator/conditions","templated":false},"configprops":{"href":"http://localhost:8080/actuator/configprops","templated":false},"configprops-prefix":{"href":"http://localhost:8080/actuator/configprops/{prefix}","templated":true},"env":{"href":"http://localhost:8080/actuator/env","templated":false},"env-toMatch":{"href":"http://localhost:8080/actuator/env/{toMatch}","templated":true},"loggers":{"href":"http://localhost:8080/actuator/loggers","templated":false},"loggers-name":{"href":"http://localhost:8080/actuator/loggers/{name}","templated":true},"heapdump":{"href":"http://localhost:8080/actuator/heapdump","templated":false},"threaddump":{"href":"http://localhost:8080/actuator/threaddump","templated":false},"metrics-requiredMetricName":{"href":"http://localhost:8080/actuator/metrics/{requiredMetricName}","templated":true},"metrics":{"href":"http://localhost:8080/actuator/metrics","templated":false},"scheduledtasks":{"href":"http://localhost:8080/actuator/scheduledtasks","templated":false},"mappings":{"href":"http://localhost:8080/actuator/mappings","templated":false}}}	  
	  - http://localhost:8080/actuator/mappings
   - Criando um Projeto Spring Cloud Config Server Local (11/02/2024)
      - Create new Spring Starter Project (erudio-config-server)
		 - Spring Boot Actuator
		 - Config Server
      - http://localhost:8888/application-dev/default
      - http://localhost:8888/application-qa/default
      - http://localhost:8888/application-perf/default
	  - http://localhost:8888/application-prod/default
   - Integrando o Spring Cloud Config Server com o Github (11/02/2024)
      - Tivemos que deixar publico, pois privado mesmo com usuario e password não estava autenticando
      - http://localhost:8888/greeting-service/default
	  - http://localhost:8888/greeting-service/dev
	  - http://localhost:8888/greeting-service/perf
	  - http://localhost:8888/greeting-service/qa
	  - http://localhost:8888/greeting-service/prod
   - Integrando o Spring Cloud Config Server com o Github (11/02/2024)
   - Integrando o Greeting Service com o Spring Cloud Config Server (13/02/2024 e 14/02/2024)
      - netstat -o -n -a | findstr 8080 >>> mostrar serviço porta Windows
   - Atualizando as Configurações sem Interromper o Microsserviço (14/02/2024)
      - @RefreshScope
   - Conclusão da Seção - Spring Cloud Configuration e Spring Boot Actuator (14/02/2024)


Seção 8: Criando e Conectando Microsserviços com Feign

   - Apresentação da Seção - Criando e Conectando Microsserviços com Feign (14/02/2024)
   - Como Serão os Nossos Microsserviços (14/02/2024)
   - Criando o Microsserviço Cambio Service (14/02/2024)
      - Criado o projeto: cambio-service
	     - Porta: 8000
      - http://localhost:8000/actuator
   - Criando o Microsserviço Cambio Service (14/02/2024)
   - Retornando Mocks e Testando o Cambio Service (04/03/2024)
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "PORT 8000"
			}
   - Recuperando a Porta da Instância em Execução (04/03/2024)
      - Duplicar a subida de projeto "cambio-service" e dentro de arguments e VM arguments incluir:
	     >>> -Dserver.port=8001
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "8000"
			}	  

      - http://localhost:8001/cambio-service/5/USD/BRL	  
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 1,
			"conversionValue": 1,
			"environment": "8001"
			}

   - Criando a Base de Dados e Adicionando as Dependências do Spring Data JPA (04/03/2024)
      - CREATE SCHEMA `cambio_service` DEFAULT CHARACTER SET latin1 ;
	  - CREATE SCHEMA `book_service` DEFAULT CHARACTER SET latin1 ;
	  - Adicionado no pom.xml as dependencias
	  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>3.2.2</version>
		</dependency>		
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.33</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>		

   - Adicionando o Flyway ao Microsserviço (11/03/2024)
   - Ajustando as Configurações do JPA no application.yml (11/03/2024)
   - Adicionando as Annotations do JPA e Integrando o Serviço ao Banco de Dados (11/03/2024 e 25/03/2024)
      - http://localhost:8000/cambio-service/5/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 5.73,
			"conversionValue": 28.65,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/BRL
			{
			"id": 1,
			"from": "USD",
			"to": "BRL",
			"conversionFactor": 5.73,
			"conversionValue": 45.84,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/ARS
			{
			"id": 4,
			"from": "USD",
			"to": "ARS",
			"conversionFactor": 92.56,
			"conversionValue": 740.48,
			"environment": "8000"
			}
      - http://localhost:8000/cambio-service/8/USD/MXN
			{
			"id": 7,
			"from": "USD",
			"to": "MXN",
			"conversionFactor": 20.15,
			"conversionValue": 161.2,
			"environment": "8000"
			}	  
	  
   - Criando o Microsserviço Book Service (25/03/2024)
      - http://localhost:8100/actuator
			{
			"_links": {
			"self": {
			"href": "http://localhost:8100/actuator",
			"templated": false
			},
			"health-path": {
			"href": "http://localhost:8100/actuator/health/{*path}",
			"templated": true
			},
			"health": {
			"href": "http://localhost:8100/actuator/health",
			"templated": false
			}
			}
			}

   - Retornando Mocks e Testando o Book Service (25/03/2024)
      - http://localhost:8100/book-service/5/BRL
			{
			"id": 1,
			"author": "Nigel Poulton",
			"lauchDate": "2024-03-26T03:30:45.950+00:00",
			"price": 13.7,
			"title": "Docker Deep Dive",
			"currency": "BRL",
			"environment": "8100"
			}
   - Adicionando o Flyway e as Dependências do Spring Data JPA ao Book Service (28/03/2024)
      - Adicionado no pom.xml e scripts


   - Integrando o Book Service ao Banco de Dados com JPA e Spring Data (10/06/2024 e 14/06/2024)
		2024-06-10T14:11:10.016-03:00  INFO 8108 --- [book-service] [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table `book_service`.`flyway_schema_history` ...
		2024-06-10T14:11:10.178-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Current version of schema `book_service`: << Empty Schema >>
		2024-06-10T14:11:10.186-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Migrating schema `book_service` to version "1 - Create Table Books"
		2024-06-10T14:11:10.226-03:00  WARN 8108 --- [book-service] [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : DB: Integer display width is deprecated and will be removed in a future release. (SQL State: HY000 - Error Code: 1681)
		2024-06-10T14:11:10.255-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Migrating schema `book_service` to version "2 - Insert Data In Books"
		2024-06-10T14:11:10.298-03:00  INFO 8108 --- [book-service] [           main] o.f.core.internal.command.DbMigrate      : Successfully applied 2 migrations to schema `book_service`, now at version v2 (execution time 00:00.046s)
		2024-06-10T14:11:10.463-03:00  INFO 8108 --- [book-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]   
		
      - http://localhost:8100/book-service/5/MXN
			{
			"id": 5,
			"author": "Steve McConnell",
			"price": 10.14,
			"title": "Code complete",
			"currency": null,
			"environment": "8100",
			"lauchDate": "2017-11-07"
			}


   - Ajustando os Problemas com o Jackson e Executando a Aplicação (14/06/2024)
      - http://localhost:8100/book-service/7/MXN
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07",
			"hibernateLazyInitializer": {}
			}
			
      - http://localhost:8100/book-service/7/ARS
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07",
			"hibernateLazyInitializer": {}
			}
			
			{
			"id": 7,
			"author": "Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates",
			"price": 19.23,
			"title": "Head First Design Patterns",
			"environment": "8100",
			"lauchDate": "2017-11-07"
			}			


   - Consumindo o Endpoint de Cambio Service no Book Service (14/06/2024)
      - Explicando que os 2 micrserviços estão prontos e efetuar ajustes finais
	  
	  - http://localhost:8100/book-service/1/BRL
			{
			"id": 1,
			"author": "Michael C. Feathers",
			"price": 49.11,
			"title": "Working effectively with legacy code",
			"environment": "8100",
			"lauchDate": "2017-11-29"
			}
			
      - http://localhost:8100/book-service/6/BRL
			{
			"id": 6,
			"author": "Martin Fowler e Kent Beck",
			"price": 88.13,
			"title": "Refactoring",
			"environment": "8100",
			"lauchDate": "2017-11-07"
			}	  


   - Usando o Feign REST Client para Invocar o Cambio Service (14/06/2024)
      - http://localhost:8100/book-service/6/BRL
			{
			"id": 6,
			"author": "Martin Fowler e Kent Beck",
			"price": 88.13,
			"title": "Refactoring",
			"environment": "8100 FEIGN",
			"lauchDate": "2017-11-07"
			}	  


   - Conclusão da Seção - Criando e Conectando Microsserviços com Feign (14/06/2024)
   
   - Apresentação da Seção - Service Discovery e Service Registry com Eureka (14/06/2024)
   
   - Criando uma Aplicação Service Discovery/Registry com Eureka (17/06/2024)
      - Criado um projeto novo
      - http://localhost:8761/
   
   - Conectando nossos Microsserviços com o Eureka Service Discovery/Registry (17/06/2024)
      - Ajustes dos outros projetos (cliente)
   
   - Conclusão da Seção - Service Discovery e Service Registry com Eureka (17/06/2024)

   - Apresentação da Seção - Load Balancing com Eureka, Feign e Spring Cloud LB (17/06/2024)

   - Implementando Load Balancing com Eureka, Feign e Spring Cloud LoadBalancer (17/06/2024)
      - http://localhost:8761/
	     BOOK-SERVICE	n/a (2)	(2)	UP (2) - DESKTOP-8NL26PL:book-service:8100 , DESKTOP-8NL26PL:book-service:8101
	     CAMBIO-SERVICE	n/a (2)	(2)	UP (2) - DESKTOP-8NL26PL:cambio-service:8000 , DESKTOP-8NL26PL:cambio-service:8001
      
	  - http://localhost:8100/book-service/14/BRL
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8000",
			"lauchDate": "2017-11-07"
			}
			
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8001",
			"lauchDate": "2017-11-07"
			}			

			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8002",
			"lauchDate": "2017-11-07"
			}

   - Spring Cloud API Gateway (Zuul) (17/06/2024 e 18/06/2024)
      - http://localhost:8765/actuator
			{
			"_links": {
			"self": {
			"href": "http://localhost:8765/actuator",
			"templated": false
			},
			"health": {
			"href": "http://localhost:8765/actuator/health",
			"templated": false
			},
			"health-path": {
			"href": "http://localhost:8765/actuator/health/{*path}",
			"templated": true
			}
			}
			}

      - http://localhost:8761/
			API-GATEWAY	n/a (1)	(1)	UP (1) - DESKTOP-8NL26PL:api-gateway:8765
			BOOK-SERVICE	n/a (2)	(2)	UP (2) - DESKTOP-8NL26PL:book-service:8100 , DESKTOP-8NL26PL:book-service:8101
			CAMBIO-SERVICE	n/a (3)	(3)	UP (3) - DESKTOP-8NL26PL:cambio-service:8002 , DESKTOP-8NL26PL:cambio-service:8000 , DESKTOP-8NL26PL:cambio-service:8001


   - Habilitando Discovery Location com Eureka para Spring Cloud Gateway (18/06/2024)
      - http://localhost:8001/cambio-service/8/USD/CLP
			{
			"id": 5,
			"from": "USD",
			"to": "CLP",
			"conversionFactor": 713.3,
			"conversionValue": 5706.4,
			"environment": "8001"
			}

      - http://localhost:8765/cambio-service/cambio-service/8/USD/CLP
			{
			"id": 5,
			"from": "USD",
			"to": "CLP",
			"conversionFactor": 713.3,
			"conversionValue": 5706.4,
			"environment": "8000"
			}

      - http://localhost:8100/book-service/14/BRL
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8000",
			"lauchDate": "2017-11-07"
			}

      - http://localhost:8765/book-service/book-service/14/BRL
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8002",
			"lauchDate": "2017-11-07"
			}


   - Passando Header e Path Params com RouteLocator e Spring Cloud Gateway (18/06/2024 e 25/06/2024)
      - http://localhost:8765/get
			{
			"args": {},
			"headers": {
			"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
			"Accept-Encoding": "gzip, deflate, br, zstd",
			"Accept-Language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
			"Content-Length": "0",
			"Forwarded": "proto=http;host=\"localhost:8765\";for=\"[0:0:0:0:0:0:0:1]:51156\"",
			"Host": "httpbin.org",
			"Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
			"Sec-Ch-Ua-Mobile": "?0",
			"Sec-Ch-Ua-Platform": "\"Windows\"",
			"Sec-Fetch-Dest": "document",
			"Sec-Fetch-Mode": "navigate",
			"Sec-Fetch-Site": "none",
			"Sec-Fetch-User": "?1",
			"Upgrade-Insecure-Requests": "1",
			"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
			"X-Amzn-Trace-Id": "Root=1-667b63e2-60ed47472cce0f7504c66057",
			"X-Forwarded-Host": "localhost:8765"
			},
			"origin": "0:0:0:0:0:0:0:1, 201.25.168.97",
			"url": "http://localhost:8765/get"
			}	  

			{
			"args": {},
			"headers": {
			"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
			"Accept-Encoding": "gzip, deflate, br, zstd",
			"Accept-Language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
			"Cache-Control": "max-age=0",
			"Content-Length": "0",
			"Forwarded": "proto=http;host=\"localhost:8765\";for=\"[0:0:0:0:0:0:0:1]:51162\"",
			"Hello": "World",
			"Host": "httpbin.org",
			"Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
			"Sec-Ch-Ua-Mobile": "?0",
			"Sec-Ch-Ua-Platform": "\"Windows\"",
			"Sec-Fetch-Dest": "document",
			"Sec-Fetch-Mode": "navigate",
			"Sec-Fetch-Site": "none",
			"Sec-Fetch-User": "?1",
			"Upgrade-Insecure-Requests": "1",
			"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
			"X-Amzn-Trace-Id": "Root=1-667b6449-7d87cbb1128a358262f46763",
			"X-Forwarded-Host": "localhost:8765"
			},
			"origin": "0:0:0:0:0:0:0:1, 201.25.168.97",
			"url": "http://localhost:8765/get"
			}
			
			{
			"args": {
			"Hello": "World"
			},
			"headers": {
			"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
			"Accept-Encoding": "gzip, deflate, br, zstd",
			"Accept-Language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
			"Cache-Control": "max-age=0",
			"Content-Length": "0",
			"Forwarded": "proto=http;host=\"localhost:8765\";for=\"[0:0:0:0:0:0:0:1]:51174\"",
			"Hello": "World",
			"Host": "httpbin.org",
			"Sec-Ch-Ua": "\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"",
			"Sec-Ch-Ua-Mobile": "?0",
			"Sec-Ch-Ua-Platform": "\"Windows\"",
			"Sec-Fetch-Dest": "document",
			"Sec-Fetch-Mode": "navigate",
			"Sec-Fetch-Site": "none",
			"Sec-Fetch-User": "?1",
			"Upgrade-Insecure-Requests": "1",
			"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
			"X-Amzn-Trace-Id": "Root=1-667b64a2-2207b4d655de79d63e14863d",
			"X-Forwarded-Host": "localhost:8765"
			},
			"origin": "0:0:0:0:0:0:0:1, 201.25.168.97",
			"url": "http://localhost:8765/get?Hello=World"
			}			

   - Rotas com RouteLocator e Spring Cloud Gateway (25/06/2024 e 08/07/2024)
      - http://localhost:8761/
	  - http://localhost:8765/cambio-service/8/USD/CLP
			{
			"id": 5,
			"from": "USD",
			"to": "CLP",
			"conversionFactor": 713.3,
			"conversionValue": 5706.4,
			"environment": "8000"
			}	  
			
			{
			"id": 5,
			"from": "USD",
			"to": "CLP",
			"conversionFactor": 713.3,
			"conversionValue": 5706.4,
			"environment": "8002"
			}
	  
	  - http://localhost:8765/book-service/14/BRL
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8100 Cambio Port 8000",
			"lauchDate": "2017-11-07"
			}
	  
			{
			"id": 14,
			"author": "Marc J. Schiller",
			"price": 45.1,
			"title": "Os 11 segredos de líderes de TI altamente influentes",
			"environment": "Book Port: 8101 Cambio Port 8001",
			"lauchDate": "2017-11-07"
			}
	  
	  
		@Bean
		public RouteLocator gatewayRouter(RouteLocatorBuilder builder) {
			return builder.routes()
					.route(p -> p.path("/get")
					.filters(f -> f
							.addRequestHeader("Hello", "World")
							.addRequestParameter("Hello", "World"))
					.uri("http://httpbin.org:80"))
					.route(p -> p.path("/cambio-service/**")
							.uri("lb://cambio-service"))
					.route(p -> p.path("/book-service/**")
							.uri("lb://book-service"))				
					.build();
		}   
   
   
   - Logging Filter com Spring Cloud Gateway (Zuul) (16/07/2024)
      - http://localhost:8765/cambio-service/8/USD/CLP
      - http://localhost:8765/book-service/14/BRL


   - Conclusão da Seção - Load Balancing com Eureka, Feign e Spring Cloud LB (16/07/2024)
   
   
   - Apresentação da Seção - Circuit Breaker com Resilience4j (16/07/2024)
   
   
   - Circuit Breaker com Resilience4j (16/07/2024)
      - resilience4j spring boot
	     - https://resilience4j.readme.io/docs/getting-started-3
	  - http://localhost:8765/book-service/foo-bar


 - Retry com Resilience4j (16/07/2024)
    - http://localhost:8765/book-service/foo-bar
		Whitelabel Error Page
		This application has no configured error view, so you are seeing this as a fallback.

		Tue Jul 16 20:52:32 BRT 2024
		[9454b904-6] There was an unexpected error (type=Internal Server Error, status=500).


    - Pilha de erro do projeto API-GATEWAY
	
		2024-07-16T20:52:32.803-03:00 ERROR 11644 --- [api-gateway] [ctor-http-nio-6] a.w.r.e.AbstractErrorWebExceptionHandler : [9454b904-6]  500 Server Error for HTTP GET "/book-service/foo-bar"

		io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: localhost/127.0.0.1:8100
			Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
		Error has been observed at the following site(s):
			*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
			*__checkpoint ⇢ HTTP GET "/book-service/foo-bar" [ExceptionHandlingWebHandler]
		Original Stack Trace:
		Caused by: java.net.ConnectException: Connection refused: no further information
			at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
			at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672) ~[na:na]
			at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946) ~[na:na]
			at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994) ~[netty-common-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.110.Final.jar:4.1.110.Final]
			at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.110.Final.jar:4.1.110.Final]
			at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

		2024-07-16T20:52:44.587-03:00  INFO 11644 --- [api-gateway] [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration



		2024-07-16T21:05:01.400-03:00 ERROR 15388 --- [book-service] [nio-8100-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhot:8080/foo-bar": localhot] with root cause

		java.net.UnknownHostException: localhot
			at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:686) ~[na:na]
			at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:183) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408) ~[na:na]
			at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1304) ~[na:na]
			at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1237) ~[na:na]
			at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1123) ~[na:na]
			at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1052) ~[na:na]
			at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:431) ~[spring-web-6.1.5.jar:6.1.5]
			at br.com.erudio.controller.FooBarController.fooBar(FooBarController.java:14) ~[classes/:na]
			at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
			at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
			at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.19.jar:6.0]
			at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.5.jar:6.1.5]
			at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.19.jar:6.0]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.5.jar:6.1.5]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.5.jar:6.1.5]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.5.jar:6.1.5]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.5.jar:6.1.5]
			at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.5.jar:6.1.5]
			at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.19.jar:10.1.19]
			at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

      - Tentativa de 3 vezes
	  
		2024-07-16T21:11:41.982-03:00  INFO 5132 --- [book-service] [nio-8101-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:11:45.208-03:00  INFO 5132 --- [book-service] [nio-8101-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:11:45.720-03:00  INFO 5132 --- [book-service] [nio-8101-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:11:45.750-03:00 ERROR 5132 --- [book-service] [nio-8101-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhot:8080/foo-bar": localhot] with root cause

		java.net.UnknownHostException: localhot
			at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:686) ~[na:na]
			at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:183) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531) ~[na:na]
			at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636) ~[na:na]

      - Tentativa de 5 vezes

		2024-07-16T21:18:04.684-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
		2024-07-16T21:18:04.732-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:18:07.954-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:18:08.464-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:18:08.977-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:18:09.487-03:00  INFO 4416 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:18:09.507-03:00 ERROR 4416 --- [book-service] [nio-8101-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhot:8080/foo-bar": localhot] with root cause

		java.net.UnknownHostException: localhot
			at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
			at java.base/java.net.Socket.connect(Socket.java:686) ~[na:na]


 - Fallback Methods com Resilience4j Wait Duration e Exponencial Backoff (16/07/2024)
     
	 - http://localhost:8765/book-service/foo-bar
		2024-07-16T21:27:44.115-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
		2024-07-16T21:27:44.116-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
		2024-07-16T21:27:44.118-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
		2024-07-16T21:27:44.198-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:27:47.419-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:27:47.929-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:27:48.442-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:27:48.955-03:00  INFO 5484 --- [book-service] [nio-8100-exec-2] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
        
		*** Configurado o ""wait-duration: 1s""
		2024-07-16T21:31:35.123-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
		2024-07-16T21:31:35.123-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
		2024-07-16T21:31:35.125-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
		2024-07-16T21:31:35.206-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:31:38.918-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:31:39.944-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:31:40.978-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:31:41.994-03:00  INFO 6732 --- [book-service] [nio-8100-exec-5] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!

		*** Configurado o ""enable-exponential-backoff: true"" -- aumenta o tempo conforme as tentativas - exponencial
		2024-07-16T21:41:22.170-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
		2024-07-16T21:41:22.171-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
		2024-07-16T21:41:22.172-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
		2024-07-16T21:41:22.224-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:41:26.006-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:41:27.545-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:41:29.812-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!
		2024-07-16T21:41:33.198-03:00  INFO 8208 --- [book-service] [nio-8101-exec-1] b.c.erudio.controller.FooBarController   : Request to foo-bar is received!


 - Conhecendo as Features de Circuit Breaker do Resilience4j (16/07/2024)
    - http://localhost:8765/book-service/foo-bar

    - Executado pelo Power Shell	
		PS C:\Users\Pedro Henrique> curl http://localhost:8765/book-service/foo-bar

		StatusCode        : 200
		StatusDescription : OK
		Content           : fallbackMethod foo-bar
		RawContent        : HTTP/1.1 200 OK
							Content-Length: 22
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 00:55:23 GMT

							fallbackMethod foo-bar
		Forms             : {}
		Headers           : {[Content-Length, 22], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 00:55:23 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 22
	
    - PS C:\Users\Pedro Henrique> while (1) {curl http://localhost:8765/book-service/foo-bar; sleep 0.1}
	   - Executando direto a cada 0.1 segundos


 - Conhecendo as Features de Rate Limit e BulkHead no Resilience4j (16/07/2024)
   - Chamada teste, da sucesso e depois para, depois libera, depois para -- @RateLimiter(name = "default") + configuracao application
   - PS C:\Users\Pedro Henrique> while (1) {curl http://localhost:8765/book-service/foo-bar; sleep 0.1}

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:04 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:04 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:04 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:04 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:04 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:04 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:04 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:04 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:06 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:06 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200                                                                                                              StatusDescription : OK                                                                                                               Content           : Foo-Bar!!!                                                                                                       RawContent        : HTTP/1.1 200 OK                                                                                                                      Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:09 GMT

							Foo-Bar!!!
		Forms             : {}
		Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:09 GMT]}
		Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200
		StatusDescription : OK
		Content           : Foo-Bar!!!
		RawContent        : HTTP/1.1 200 OK
							Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:09 GMT
																																								 Foo-Bar!!!                                                                                                       Forms             : {}                                                                                                               Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:09 GMT]}          Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		StatusCode        : 200
		StatusDescription : OK
		Content           : Foo-Bar!!!
		RawContent        : HTTP/1.1 200 OK
							Content-Length: 10
							Content-Type: text/plain;charset=UTF-8
							Date: Wed, 17 Jul 2024 01:44:09 GMT
																																								 Foo-Bar!!!                                                                                                       Forms             : {}                                                                                                               Headers           : {[Content-Length, 10], [Content-Type, text/plain;charset=UTF-8], [Date, Wed, 17 Jul 2024 01:44:09 GMT]}          Images            : {}
		InputFields       : {}
		Links             : {}
		ParsedHtml        : mshtml.HTMLDocumentClass
		RawContentLength  : 10

		curl : O servidor remoto retornou um erro: (500) Erro Interno do Servidor.
		No linha:1 caractere:12
		+ while (1) {curl http://localhost:8765/book-service/foo-bar; sleep 0.1 ...
		+            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			+ CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], WebException
			+ FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand


 - Conclusão da Seção - Circuit Breaker com Resilience4j (16/07/2024)
 
 
 - Apresentação da Seção - Configurando o Swagger OpenAPI em Microsserviços (16/07/2024)
 
 - Por que Usar o Swagger OpenAPI nos seus Microsserviços (12/08/2024)
 
 - Configurando o Swagger OpenAPI no Book Microservice (12/08/2024 e 03/09/2024)
    - http://localhost:8101/v3/api-docs
	- http://localhost:8100/v3/api-docs
 
 - Configurando o SpringDoc OpenAPI UI (Swagger) nos dois Microservices (03/09/2024)
    - http://localhost:8101/v3/api-docs
	- http://localhost:8100/v3/api-docs

    - http://localhost:8101/swagger-ui/index.html
	- http://localhost:8100/swagger-ui/index.html

    - http://localhost:8100/swagger-ui/index.html#/Book%20endpoint/findBook
	  
	  1 ARS
	  
		{
		  "id": 1,
		  "author": "Michael C. Feathers",
		  "price": 793.24,
		  "title": "Working effectively with legacy code",
		  "environment": "Book Port: 8100 Cambio Port 8001",
		  "lauchDate": "2017-11-29"
		}


	  1 CLP

		{
		  "id": 1,
		  "author": "Michael C. Feathers",
		  "price": 6112.99,
		  "title": "Working effectively with legacy code",
		  "environment": "Book Port: 8100 Cambio Port 8002",
		  "lauchDate": "2017-11-29"
		}


	  1 BRL

		{
		  "id": 1,
		  "author": "Michael C. Feathers",
		  "price": 49.11,
		  "title": "Working effectively with legacy code",
		  "environment": "Book Port: 8100 Cambio Port 8000",
		  "lauchDate": "2017-11-29"
		}



    - http://localhost:8000/v3/api-docs
	- http://localhost:8001/v3/api-docs
	- http://localhost:8002/v3/api-docs

    - http://localhost:8000/swagger-ui/index.html
	- http://localhost:8001/swagger-ui/index.html
	- http://localhost:8002/swagger-ui/index.html

    - http://localhost:8000/swagger-ui/index.html#/Cambio%20Service%20API/getCambio


	  7 USD BRL
	  
		{
		  "id": 1,
		  "from": "USD",
		  "to": "BRL",
		  "conversionFactor": 5.73,
		  "conversionValue": 40.11,
		  "environment": "8000"
		}


 - Ajustando as Rotas no API Gateway (03/09/2024)
 
 - Adicionar o SpringDoc OpenAPI UI ao API Gateway (04/09/2024 e 08/09/2024)
    - http://localhost:8765/swagger-ui.html
	- http://localhost:8765/webjars/swagger-ui/index.html
    - No operations defined in spec!

 - Ajustando as Configurações para Renderizar o Swagger UI (08/09/2024)
    - http://localhost:8765/swagger-ui.html
	- http://localhost:8765/webjars/swagger-ui/index.html
	- Failed to load API definition.
	
	- http://localhost:8765/webjars/swagger-ui/index.html?urls.primaryName=book-service
	- http://localhost:8765/webjars/swagger-ui/index.html?urls.primaryName=cambio-service
	
 - Conclusão da Seção - Configurando o Swagger OpenAPI em Microsserviços (08/09/2024)
 
 - Apresentação da Seção - Minicurso de Docker (16/09/2024)
 
 - O que é o Docker (16/09/2024)
 
 - Executando o Nosso Primeiro Contêiner (16/09/2024 e 30/09/2024)
    - docker --version
	- docker run hello-world

		PS C:\Users\Pedro Henrique> docker run hello-world
		Unable to find image 'hello-world:latest' locally
		latest: Pulling from library/hello-world
		c1ec31eb5944: Pull complete
		Digest: sha256:91fb4b041da273d5a3273b6d587d62d518300a6ad268b28628f74997b93171b2
		Status: Downloaded newer image for hello-world:latest

		Hello from Docker!
		This message shows that your installation appears to be working correctly.

		To generate this message, Docker took the following steps:
		 1. The Docker client contacted the Docker daemon.
		 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
			(amd64)
		 3. The Docker daemon created a new container from that image which runs the
			executable that produces the output you are currently reading.
		 4. The Docker daemon streamed that output to the Docker client, which sent it
			to your terminal.

		To try something more ambitious, you can run an Ubuntu container with:
		 $ docker run -it ubuntu bash

		Share images, automate workflows, and more with a free Docker ID:
		 https://hub.docker.com/

		For more examples and ideas, visit:
		 https://docs.docker.com/get-started/    
 
 
 
 
 
 
 
